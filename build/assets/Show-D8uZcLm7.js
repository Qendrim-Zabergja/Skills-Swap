import{m as x,q as D,z as T,C as U,c as h,o as p,d as n,a as V,w as L,u as N,S as R,i as M,t as m,F as $,A as B,h as j,k as O,v as P,p as Y,D as C,n as f,W as z}from"./app-RABvWGqE.js";const H={class:"min-h-screen bg-gray-100"},F={class:"bg-white shadow"},W={class:"max-w-7xl mx-auto px-4 py-3 flex items-center"},q={class:"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8"},K={class:"bg-white rounded-lg shadow"},G={class:"border-b px-6 py-4"},J={class:"flex items-center justify-between"},Q={class:"flex items-center"},X=["src","alt"],Z={class:"text-lg font-semibold"},ee={key:0,class:"text-sm text-gray-600"},se={class:"text-sm text-gray-500"},ne={class:"bg-blue-100 text-blue-800 px-2 py-1 rounded-full"},te={key:0,class:"text-center my-4"},oe={class:"px-4 py-1 bg-gray-100 rounded-full text-sm text-gray-600"},le={class:"border-t px-6 py-4"},re=["disabled"],ie={__name:"Show",props:{auth:Object,otherUser:Object,messages:Array,skillExchange:String},setup(g){const i=g,b=x(null),d=x(""),c=x([...i.messages]),v=x(0);console.log("Initial messages:",c.value.length);const w=D(()=>(console.log("Computing grouped messages with",c.value.length,"messages","render key:",v.value),c.value.map(s=>{let t=s.date;return t||(t=new Date().toISOString().split("T")[0]),{...s,date:new Date(t).toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"})}}))),E=()=>{b.value&&(b.value.scrollTop=b.value.scrollHeight)},k=()=>{if(d.value.trim()==="")return;const s=d.value.trim();d.value="";const t={id:"temp-"+Date.now(),content:s,time:new Date().toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0}),date:new Date().toISOString().split("T")[0],is_mine:!0};c.value.push(t),v.value++,console.log("Added outgoing message, new count:",c.value.length,"render key:",v.value),C(()=>{E()}),z.post(route("messages.store",i.otherUser.id),{content:s,skill_exchange:i.skillExchange},{preserveScroll:!0,onSuccess:()=>{console.log("Message sent successfully")},onError:o=>{console.error("Error sending message:",o)}})},y=()=>{Y.post(route("messages.mark-conversation-read",i.otherUser.id)).then(()=>{console.log("Marked all messages as read")}).catch(s=>{console.error("Error marking messages as read:",s)})};let l=null,r=null;return T(()=>{E(),y();const s=i.auth.user.id,t=i.otherUser.id;console.log("Setting up Echo listeners for user:",s,"and other user:",t),l&&(console.log("Unsubscribing from existing user channel"),l.unsubscribe(),l=null),r&&(console.log("Unsubscribing from existing chat channel"),r.unsubscribe(),r=null);const o=new Set,a=e=>{if(!e||!e.message||o.has(e.message.id))return!1;if(parseInt(e.message.user_id)===parseInt(t)){if(c.value.some(A=>A.id===e.message.id))return!1;o.add(e.message.id);const I={id:e.message.id,content:e.message.content,time:e.message.time,date:e.message.date,is_mine:!1};return c.value.push(I),v.value++,y(),C(()=>{E()}),!0}return!1};l=window.Echo.private(`user.${s}`),l.listenToAll((e,u)=>{console.log(`ðŸ”” ANY EVENT on user.${s}:`,{event_name:e,data:u})});const S=window.Echo.private(`user.${t}`);S.listenToAll((e,u)=>{console.log(`ðŸ”” ANY EVENT on recipient's user.${t}:`,{event_name:e,data:u})}),S.listen(".MessageSent",e=>{console.log(`ðŸ“¬ RECEIVED '.MessageSent' on recipient's user.${t}:`,e),a(e)}),l.subscribed(()=>{console.log(`âœ… Successfully subscribed to private-user.${s}`),l.listen("MessageSent",e=>{console.log(`ðŸ“¬ RECEIVED 'MessageSent' on user.${s}:`,e),a(e)}),l.listen(".MessageSent",e=>{console.log(`ðŸ“¬ RECEIVED '.MessageSent' on user.${s}:`,e),a(e)}),l.listen("App\\Events\\MessageSent",e=>{console.log(`ðŸ“¬ RECEIVED 'App\\Events\\MessageSent' on user.${s}:`,e),a(e)})}),console.log(`Setting up listener on private-chat.${s}`),r=window.Echo.private(`chat.${s}`),r.listenToAll((e,u)=>{console.log(`ðŸ”” ANY EVENT on chat.${s}:`,{event_name:e,data:u})});const _=window.Echo.private(`chat.${t}`);_.listenToAll((e,u)=>{console.log(`ðŸ”” ANY EVENT on recipient's chat.${t}:`,{event_name:e,data:u})}),_.listen(".MessageSent",e=>{console.log(`ðŸ“¬ RECEIVED '.MessageSent' on recipient's chat.${t}:`,e),a(e)}),r.subscribed(()=>{console.log(`âœ… Successfully subscribed to private-chat.${s}`),r.listen("MessageSent",e=>{console.log(`ðŸ“¬ RECEIVED 'MessageSent' on chat.${s}:`,e),a(e)}),r.listen(".MessageSent",e=>{console.log(`ðŸ“¬ RECEIVED '.MessageSent' on chat.${s}:`,e),a(e)}),r.listen("App\\Events\\MessageSent",e=>{console.log(`ðŸ“¬ RECEIVED 'App\\Events\\MessageSent' on chat.${s}:`,e),a(e)})}),window.Echo.connector.pusher.connection.bind("state_change",e=>{console.log("ðŸ”„ Pusher connection state changed:",e)}),window.Echo.connector.pusher.connection.bind("connected",()=>{console.log("Pusher connected successfully!"),console.log("Subscribed channels:",window.Echo.connector.pusher.channels.channels)}),window.Echo.connector.pusher.connection.bind("error",e=>{console.error("Pusher connection error:",e)})}),U(()=>{const s=i.auth.user.id,t=i.user.id;console.log("Component unmounting, cleaning up all channel subscriptions"),l&&(l.stopListening(".MessageSent"),l.stopListening("MessageSent"),l.stopListening("App\\Events\\MessageSent"),l.unsubscribe(),console.log(`Stopped listening on user.${s}`)),r&&(r.stopListening(".MessageSent"),r.stopListening("MessageSent"),r.stopListening("App\\Events\\MessageSent"),r.unsubscribe(),console.log(`Stopped listening on chat.${s}`));const o=window.Echo.connector.pusher;o.unsubscribe(`private-user.${s}`),o.unsubscribe(`private-chat.${s}`),o.unsubscribe(`private-user.${t}`),o.unsubscribe(`private-chat.${t}`),console.log("Cleaned up all Echo listeners")}),(s,t)=>(p(),h("div",H,[n("div",F,[n("div",W,[V(N(R),{href:s.route("profile.edit"),class:"flex items-center text-gray-600 hover:text-gray-900 transition-colors"},{default:L(()=>t[1]||(t[1]=[n("svg",{xmlns:"http://www.w3.org/2000/svg",class:"h-5 w-5 mr-2",viewBox:"0 0 20 20",fill:"currentColor"},[n("path",{"fill-rule":"evenodd",d:"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z","clip-rule":"evenodd"})],-1),n("span",null,"Back to Profile",-1)])),_:1},8,["href"])])]),n("div",q,[n("div",K,[n("div",G,[n("div",J,[n("div",Q,[n("img",{src:g.otherUser.profile_photo_url,alt:g.otherUser.name,class:"w-10 h-10 rounded-full mr-4"},null,8,X),n("div",null,[n("h2",Z,m(g.otherUser.name),1),g.skillExchange?(p(),h("p",ee,m(g.skillExchange),1)):M("",!0)])]),n("div",se,[n("span",ne,m(c.value.length)+" messages ",1)])])]),n("div",{ref_key:"messagesContainer",ref:b,class:"px-6 py-4 h-[500px] overflow-y-auto"},[(p(),h("div",{key:v.value},[(p(!0),h($,null,B(w.value,(o,a)=>(p(),h($,{key:o.id||"msg-"+a},[a===0||o.date!==w.value[a-1].date?(p(),h("div",te,[n("span",oe,m(o.date),1)])):M("",!0),n("div",{class:f(["flex mb-4",o.is_mine?"justify-end":"justify-start"])},[n("div",{class:f(["max-w-[70%] rounded-lg px-4 py-2",o.is_mine?"bg-gray-800 text-white rounded-br-none":"bg-gray-100 text-gray-900 rounded-bl-none"])},[n("p",null,m(o.content),1),n("p",{class:f(["text-xs mt-1",o.is_mine?"text-gray-300":"text-gray-500"])},m(o.time),3)],2)],2)],64))),128))]))],512),n("div",le,[n("form",{onSubmit:j(k,["prevent"]),class:"flex gap-4"},[O(n("input",{"onUpdate:modelValue":t[0]||(t[0]=o=>d.value=o),type:"text",placeholder:"Type your message...",class:"flex-1 rounded-lg border-gray-300 focus:border-gray-500 focus:ring-gray-500"},null,512),[[P,d.value]]),n("button",{type:"submit",class:"px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700 disabled:opacity-50",disabled:!d.value.trim()}," Send ",8,re)],32)])])])]))}};export{ie as default};
